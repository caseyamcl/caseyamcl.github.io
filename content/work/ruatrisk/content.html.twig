<p>
    The RU@Risk Project is a tailored messaging system that gathers college students' attitudes
    and beliefs about STDs.  The system guides students through a survey and tailored content,
    and then provides them with the option to securely order an at-home STD test kit.
</p>

<p>
    The system was built using PHP, CodeIgniter, and MySQL.  It includes many custom components,
    including:
</p>

<ul>
    <li>full-featured survey and data collection functionality,</li>
    <li>a tailored messaging system which allows content creators to present custom content based off of survey responses,</li>
    <li>a mechansim for recording all interaction on the site, and</li> 
    <li>a secure ordering system that interfaces with the Florida Department of Health systems through a web services API
    which was custom built for this application.</li>
</ul>

<p>
    Because of the deep integration between the tailored messaging system and the survey functionality,
    it was necessary for us to develop our own in-house survey software rather than use an off-the-shelf
    existing software package.
</p>

<p>
    The project entailed some unique challenges:
</p>

<ul>
    <li>
        We worked witht the principal investigators to ensure the system met functional requirements
        and to adapt content they had developed to an appropriate format for presentation on the web.
    </li>
    <li>
        We developed a parser for custom template tags for injecting survey questions and tailored content
        within HTML pages.  The template tags had to be easy to use for HTML devlopers.
    </li>
    <li>
        Students were given the option to order a STD test kit at the end of the survey/tailord messaging
        system.  In order to accomodate this functionality, we had to develop
        <ol>
            <li>
                A secure online ordering system that stores personal identifying information in a database.
                The data must be linked to the survey respondent data, but not in a way that allows researchers
                to identify survey responses by person.  We used a hash-based encrypted key to link the data.
            </li>
            <li>
                Once the order is placed into the system, the FL Department of Health systems retrieve the
                order through a semi-RESTful web services API that we developed.  The API is secured by IP and by
                a certificate-based encryption system.
            </li>
        </ol>
    </li>
</ul>

<p>
    My role in the project was to architect the system, work directly with the Principal Investigators,
    hire a developer/designer to design the front-end (HTML/CSS, design, and JS), code the application,
    and ensure integrity and security of the data during the data colleciton process.
</p>